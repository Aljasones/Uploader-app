rfc813.txt: [                               July, 1982,                                    2, 2.  The Mechanisms, sending  five  segments  of 200 bytes each.  The receiver, on processing, the data has removed the first 200 bytes from the buffer,  so  that  the, window.  In this case, the usable window is only 200 bytes., window of 200 bytes, it has only 50 bytes to send  until  it  reaches  a, very important, but that a value of about 25 percent  is  sufficient  to, interval seems to be 200 to 300 milliseconds.  Appendix A  describes  an,                                    12, smaller than 25 percent of the offered window.  The receiver  algorithms,                                    20,                                    21, sending  of  an  acknowledgement,  a  fixed  interval  of  200  to   300,                                    22]
rfc806.txt: [          1.2  Vendor-Defined Extensions to the Specification         4,       2.  A SIMPLE MODEL OF A CBMS ENVIRONMENT                        6,           2.1  Logical Model of a CBMS                                8,           2.2  Relationship to the ISO Reference Model for Open      10,           2.3  Messages and Fields                                   10,           2.4  Message Originators and Recipients                    11,       3.  SEMANTICS                                                  12,           3.1  Semantics of Message Fields                           12,                3.1.1  Types of fields                                12,                3.1.2  Semantic Compliance Categories                 13,           3.2  Message Processing Functions                          18,                3.2.1  Message creation and posting                   19,                3.2.2  Message reissuing and forwarding               20,                     3.2.2.1  Redistribution                          22,                     3.2.2.2  Assignment                              22,                3.2.3  Reply generation                               23,                3.2.4  Cross referencing                              24,                     3.2.4.1  Unique identifiers                      24,                     3.2.4.2  Serial numbering                        24,                3.2.5  Life span functions                            25,                3.2.6  Requests for recipient processing              25,                     3.2.6.1  Message circulation                     26,           3.3  Multiple Occurrences and Ordering of Fields           26,       4.  SYNTAX                                                     28,           4.1  Introduction                                          28,                4.1.1  Message structure                              28,                4.1.2  Data elements                                  29,                     4.1.2.1  Primitive data elements                 30,                     4.1.2.2  Constructor data elements               30,                     4.1.3.2  Comments                                31,           4.2  Overview of Syntax Encoding                           32,                4.2.1  Identifier Octets                              32,                4.2.2  Length code and Qualifier components           33,                     4.2.2.1  Length Codes                            35,                     4.2.2.2  Qualifier                               36,                4.2.3  Property-List                                  38,                4.2.4  Data Element Contents                          38,                     4.3.1.1  Primitives                              42,                     4.3.1.2  Constructors                            44,                4.3.2  Using data elements within message fields      48,       APPENDIX A.  FIELDS -- IMPLEMENTORS' MASTER REFERENCE          52,           D.2  BASIC Fields                                          66,           E.2  Cross Referencing                                     68,       APPENDIX G.  SUMMARY OF DATA ELEMENTS BY COMPLIANCE CATEGORY   72,           G.1  BASIC Data Elements                                   72,           G.2  OPTIONAL Data Elements                                72,           H.2  Constructor Data Elements                             76,       REFERENCES                                                     92,       FIG. 2.    MESSAGE FORWARDING AND REDISTRIBUTION               21,       FIG. 3.    EXAMPLE OF MESSAGE CIRCULATION                      27,       TABLE 2.    TYPE BITS IN THE IDENTIFIER OCTET                  33,                                       2                          ,       Section  2  "A  Simple  Model of a CBMS Environment", Section 3.1,       "Semantics of Message Fields", Section 4.2  "Overview  of  Syntax,            Section 2 presents a simple model of operation  of  a  CBMS.,       (See Section 3.2.)   Section  4  presents  details  of  the  form,       1.2  Vendor-Defined Extensions to the Specification,                                                               Section 2,       2.  A SIMPLE MODEL OF A CBMS ENVIRONMENT,       normal  English  senses.    (See Section 2.4.)  A message (in its,       Section 3.2.,                                                               Section 2,                                                               Section 2,       2.1  Logical Model of a CBMS,                                                             Section 2.1,                                                             Section 2.1,       2.2  Relationship to the ISO Reference Model for Open Systems,       2.3  Messages and Fields,       may have little to do with the fields themselves.    Section  3.2,                                                             Section 2.3,       2.4  Message Originators and Recipients,       all  the  fields in each functional group.  Section 3.2 describes,       Sections 1 and 2.  Semantically valid messages must  contain  one,       receiving CBMS.  (Section  3.2  describes  classes  of  functions,                                      12                          ,       3.1.2  Semantic Compliance Categories,            (Syntactic compliance is defined in Section 4.1.2.),       replies should be directed.  (See Section 2.4.),       Section 2.4).  Recipient  fields  identify  who  or  what  is  to,                 See section 3.2.1 for further discussion of the use  of,                 field.    (See  Section  3.2.6.1.)    It identifies all,                 message.   (See  Section  3.2.6.1.)    It  is  used  in,                 effect.  (See also Section 3.2.5.),                 effect.  (See also Section 3.2.5.),                 event.  (See also Section 3.2.5.),       3.2.4.),                 3.2.4.1.    Only one Message-ID field is permitted in a,                 encapsulating  (see  Section  2.4.1)  to  differentiate,       3.2  Message Processing Functions,                                                           Section 3.2.1,       3.2.1  Message creation and posting,       message to a new recipient (see Section 2.4.1) or by  creating  a,       some  other  message.  Reply functions (Section 3.2.3) provide an,                                                           Section 3.2.1,       system.   A message identifier (Sections 3.2.4 and 3.1.6), placed,       3.2.2  Message reissuing and forwarding,       These purposes are exemplified in Figure 2.,       to pure unformatted text).  (See Figure 2 for an example of how a,                                      20                          ,                                                           Section 3.2.2,       FIG. 2.  MESSAGE FORWARDING AND REDISTRIBUTION,                                      21                          ,                                                           Section 3.2.2,              2,       3.2.2.1  Redistribution,       included directly in a new message.  (See Figure 2.),       3.2.2.2  Assignment,         2,                                      22                          ,                                                           Section 3.2.3,       3.2.3  Reply generation,              2.  The people  responsible  for  receiving  responses,                                      23                          ,                                                           Section 3.2.4,       3.2.4  Cross referencing,       3.2.4.1  Unique identifiers,       3.2.4.2  Serial numbering,       sequences  concurrently  (for  example, A1, A2, A3... and B1, B2,,                                      24                          ,                                                         Section 3.2.4.2,       they differ from unique identifiers  (Section  3.2.4.1)  in  that,       3.2.5  Life span functions,       3.2.6  Requests for recipient processing,                                      25                          ,                                                           Section 3.2.6,       3.2.6.1  Message circulation,                                      26                          ,                                      27                          ,       and the form for its contents.  (See Section 4.3.2.),                                      28                          ,       element.  (See Section 4.3.2.),       appears in Section 4.3.2 and in Appendix C.,       4.1.2  Data elements,       4.2.2.  (Semantic compliance is defined in Section 3.1.2.),       4.1.2.1  and  4.1.2.2.)   Primitive data elements, such as ASCII-,                                      29                          ,                                                         Section 4.1.2.1,       4.1.2.1  Primitive data elements,       elements are Integer,  2's  complement  integers;  Bit-String,  a,       explicit length.  (See Section 4.2.2.1.)  Any other  use  is  not,       4.1.2.2  Constructor data elements,       4.1.3.1)  or one or more Comments (Section 4.1.3.2).  A mechanism,       4.1.3.2  Comments,                                                             Section 4.2,       4.2  Overview of Syntax Encoding,       4.2.1  Identifier Octets,       2.),                                      32                          ,                                                           Section 4.2.1,           TABLE 2.  TYPE BITS IN THE IDENTIFIER OCTET,       following the identifier octet.  (See 4.2.2.1.),       4.2.2  Length code and Qualifier components,                                                           Section 4.2.2,            bit 7 6 5 4 3 2 1 0,       Length  Code  or  the  Qualifier  must be greater than 127, extra,       octets can be added, up to a maximum of 127  octets.    Figure  5,       than 127 and one greater than 127.,       2  -1).  This message format specification places  no  limitation,        32,       2  -1)  should  be  avoided unless it is known that the receiving,       cases are explained further in Sections 4.2.2.1 and 4.2.2.2.,                                                         Section 4.2.2.1,            bit 7 6 5 4 3 2 1 0,       4.2.2.1  Length Codes,       127.,       (2     - 1) (that is, 127 octets to represent the value).,                                                         Section 4.2.2.1,            bit 7 6 5 4 3 2 1 0,       values are 38, 201, and 300.,       4.2.2.2  Qualifier,                                                         Section 4.2.2.2,             |10000001|11001001|                 Length code for 201,       range  0 through 127.  A long Qualifier is at least two octets in,                                                           Section 4.2.3,                |00011011|            Qualifier with value 28 (decimal).,                +--------+--------+--------+              266 (decimal).,                                                              value 266.,       4.2.3  Property-List,       4.2.1.),       4.2.4  Data Element Contents,                                                           Section 4.2.4,       element.    Section  4.3.2  describes  the  use  of specific data,       4.3.1.1), and constructors (Section 4.3.1.2).,       Contents.  (See Section 4.2.),       identifier octets appear in Section 4.2.1.,       ASCII-String             (BASIC)        02        002 ,                                      42                          ,                 (Use of this element is described in Section 4.2.2.1.),       Integer                  (OPTIONAL)     20        040 ,                 This  data element contains a 2's complement integer of,                 recommended  that the data element contents be either 2,       Padding                  (OPTIONAL)     21        041 ,       4.3.1.2  Constructors,                                                         Section 4.3.1.2,       Date                     (BASIC)        28        050 ,                                                         Section 4.3.1.2,                 available  data  elements  beyond  the  128  that   are,                 being represented.  (See Section 4.3.2.),                                                         Section 4.3.1.2,       Property-List            (OPTIONAL)     24        044 ,       Sequence                 (OPTIONAL)     0A        012 ,                                                         Section 4.3.1.2,       4.3.2  Using data elements within message fields,       Printing-Name                           02        002 ,                 See section 3.2.1 for further discussion of the use  of,                                      52                          ,                 field.    (See  Section  3.2.6.1.)    It identifies all,                 message.    (See  Section  3.2.6.1.)    It  is  used in,       Comments                 OPTIONAL       10        020 ,       Date                     OPTIONAL       11        021 ,       End-Date                 OPTIONAL       12        022 ,                 effect.  (See also Section 3.2.5.)  This field contains,       In-Reply-To              OPTIONAL       13        023 ,       Keywords                 OPTIONAL       14        024 ,       Message-Class            OPTIONAL       15        025 ,       Message-ID               OPTIONAL       16        026 ,                 3.2.4.1.  Only one Message-ID field is permitted  in  a,       Obsoletes                OPTIONAL       26        046 ,       Originator-Serial-Number OPTIONAL       17        027 ,       Posted-Date              REQUIRED       02        002 ,       Received-From            OPTIONAL       1A        032 ,       References               OPTIONAL       20        040 ,       Reissue-Type             OPTIONAL       25        045 ,                 encapsulating  (see  Section  3.2.2)  to  differentiate,       Sender                   OPTIONAL       22        042 ,       Start-Date               OPTIONAL       23        043 ,                 effect.  (See also Section 3.2.5.)  This field contains,       Warning-Date             OPTIONAL       24        044 ,                 event.   (See also Section 3.2.5.)  This field contains,       ASCII-String             (BASIC)        02        002 ,       Date                     (BASIC)        28        050 ,                 (Use of this element is described in Section 4.2.2.1.),                 available  data  elements  beyond  the  128  that   are,                 being represented.  (See Section 4.3.2.),       Integer                  (OPTIONAL)     20        040 ,                 This data element contains a 2's complement integer  of,                 recommended that the data element contents be either  2,       Padding                  (OPTIONAL)     21        041 ,       Property-List            (OPTIONAL)     24        044 ,                                      62                          ,       Sequence                 (OPTIONAL)     0A        012 ,       02          002         ASCII-String,       0A          012         Sequence,       20          040         Integer,       21          041         Padding,       24          044         Property-List,       28          050         Date,       D.2  BASIC Fields,       E.2  Cross Referencing,       ASCII-String             (primitive)    02        002 ,       Date                     (constructor)  28        050 ,       G.2  OPTIONAL Data Elements,       Integer                  (primitive)    20        040 ,       Padding                  (primitive)    21        041 ,                                      72                          ,       Property-List            (constructor)  24        044 ,       Sequence                 (constructor)  0A        012 ,       value is 4,294,967,296 (decimal):,                        5   F    2   9    1   C    D   0 |,       H.2  Constructor Data Elements,            |00100100|  1   1 |01000101|  0   F |  0   2 |,            |01000101|  0   F |  0   2 |00000010|  0   C |,                     |  0   0 |  1   C    5   F    2   D,                        7   7    B   A    F   6    2   9 |,       element contains a Bit-String which contains 22 bits (((4-1) x 8),       - 2) of data.  These 22 bits are represented in octets; the final,       2 bits in the final octet are padding and are therefore ignored:,                     |  0   2 |  A   3    7   8    1   C |,       data element whose value is 129 (decimal).,            |00001001|  0   4 |00100000|  0   2 |  0   0    8   1 |,            |00001010|  1   2 |00000010|  0   7 |This is|,            |00001011|  0   8 |00100000|  0   2 |  0   2    0   7 |,                     |00100000|  0   2 |  0   0    4   7 |,                     |  0   2 |00101000|  1   4 |00000010|,                     |  1   2 |19800704-180000EDT|,                     |01001100|  2   8 |  0   4 |00000010|,                     |  2   5 |,            |01111111|  0   3 |  7   2 |   P    O    E   |,            |11001100|  2   0 |  0   4 |00100100|  0   9 |,                     |00000010|  1   2 |Do you want lunch?|,                                      82                          ,            |01001100|  2   1 |  0   7 |00000010|  1   E |,       vendor.    This  vendor  has  defined  vendor-defined  field   12,       (The  meaning of vendor-defined field 12 is unique to the vendor;,            |11001100|  1   F |  8   2 |  0   0    0   C |,                     |  0   2 |00000010|  0   9 |Reply-By:|,       3.2.2.),            |01001100|  1   5 |  0   2 |00101000|  1   2 |,            |01001100|  1   5 |  0   2 |00101000|  1   2 |,            |01001100|  1   0 |  2   5 |00000010|  0   D |,            |01001100|  1   5 |  0   2 |00101000|  1   2 |,       H.2 and H.4, but with a known rather than an unknown length.,            |00001011|  8   0 |00100000|  0   2 |  0   2    0   7 |,                     |00100000|  0   2 |  0   0    4   7 |,            |01001100|  1   5 |  0   2 |00101000|  1   2 |,            Services Bibliography. Technical Report NIC-BIBLIO-791201,,                                      92                          ,                 ASCII-String   29, 30, 42, 45, 47, 49, 53, 54, 55, 57,,                 Assignment   17, 22, 55,                 Attachments   17, 52,                 Audit trail   20,                 Author   14, 52,                    ASCII-String   42, 57,                 BASIC syntactic elements   29,                 Bcc   14, 19, 20, 52,                 Bit numbering in octets   32,                 Bit-String   30, 37, 42, 44, 45, 47, 57, 58, 59, 63,                 Cc   14, 19, 52,                 Chains of correspondence   24,                 Circulate-Next   15, 26, 53,                 Circulate-To   15, 26, 53,                 Circulation   26,                 Constructor data element   29, 30,                 Contents   32, 70,                 Cross Referencing   24,                         36, 38, 39, 41, 42, 47, 57, 63, 81,                    ASCII-String (BASIC)   42, 57,                    Bit-String (OPTIONAL)   42, 57,                    Padding (OPTIONAL)   44, 62,                    Property (OPTIONAL)   47, 62,                    Property-List (OPTIONAL)   46, 62,                 Dating   25,                 Encapsulating   22,                 End-Date   15, 25, 53, 56,                 Field   10, 26, 29, 30, 31, 37, 46, 60, 61, 66,                 Field label presentation   29,                    Attachments (OPTIONAL)   52, 17,                    Author (OPTIONAL)   52, 14,                    Bcc (OPTIONAL)   52, 14,                    Cc (BASIC)   52, 14,                 From   12, 14, 23, 52, 53, 55,                 Globally unique identifiers   24,                 Identifier octet   33, 35, 32, 33, 36, 39, 40, 70,                    globally unique   24,                 In-Reply-To   16, 24, 53,                 Length Code   34, 36, 32, 33, 34, 35, 36, 37, 39, 40,,                 Message   10, 12, 29, 30, 31, 37, 46, 61,                 Message stores   25,                 Message Transfer System   9, 17, 20, 55, 8, 9, 10, 12,,                         15, 16, 20, 54, 55,                 Message-ID   16, 24, 26, 53, 54, 55,                 Numbering bits in octets   32,                 Obsoletes   16, 24, 54,                    bit numbering in   32,                    Bit-String   42, 57,                    Padding   44, 62,                    Property   47, 62,                    Property-List   46, 62,                 OPTIONAL syntactic elements   29,                 Originator   11, 13, 15, 25, 52, 53, 55,                 Originator-Serial-Number   16, 25, 54,                 Padding   44, 62,                 Posted-Date   12, 15, 26, 53, 54,                    field label   29,                 Primitive data element   30, 29, 30,                 Property   32, 37, 46, 47, 62,                 Property-Identifier   47, 62,                 Property-List   30, 32, 33, 38, 39, 40, 46, 62, 70,                 Qualifier   32, 33, 34, 36, 37, 39, 40, 42, 44, 45, 46,,                         47, 48, 57, 58, 59, 60, 62, 64, 70,                 Recipient   11, 14, 17, 52, 53, 55, 56,                 Redistribution   17, 22, 55,                 References   16, 24, 55,                 Reply   13, 23,                 Reply-to   14, 23, 53, 55,                 Sender   14, 26, 55,                 Sequence   29, 30, 47, 63,                 Serial Numbers   16, 24, 54,                 Start-Date   15, 25, 55,                 Syntactic reissuing   22,                 Text   17, 26, 56,                 To   12, 14, 19, 26, 30, 56,                 Unique identifiers   24,                 User Agent   8, 9, 20,                 User interface   29,                 Warning-Date   15, 25, 56]
rfc802.txt: [         RFC 802: The ARPANET 1822L Host Access Protocol, RFC 802                                           Andrew G. Malis, 2   THE ARPANET 1822L HOST ACCESS PROTOCOL................ 4, 2.1   Addresses and Names................................. 6, 2.2   Name Authorization and Effectiveness................ 8, 2.3   Uncontrolled Messages.............................. 14, 2.4   The Short-Blocking Feature......................... 15, 2.4.1   Host Blocking.................................... 16, 2.4.2   Reasons for Host Blockage........................ 19, 2.5   Establishing Host-IMP Communications............... 22, 3   1822L LEADER FORMATS................................. 25, 3.1   Host-to-IMP 1822L Leader Format.................... 26, 3.2   IMP-to-Host 1822L Leader Format.................... 34, 4   REFERENCES........................................... 42, RFC 802                                           Andrew G. Malis, 1822 Address Format....................................... 6, 1822L Name Format......................................... 7, 1822L Address Format...................................... 7, Host-to-IMP 1822L Leader Format.......................... 27, IMP-to-Host 1822L Leader Format.......................... 35, RFC 802                                           Andrew G. Malis, The new host access protocol is known as the ARPANET  1822L  (for, the current ARPANET 1822 Host Access Protocol, which is described, in  sections  3.3  and  3.4 of BBN Report 1822 [1].  Although the, 1822L protocol uses different  Host-IMP  leaders  than  the  1822, interface described in section 3.7 of Report 1822.  This  feature, paragraph), regardless of whether they  use  the  1822  or  1822L, RFC 802                                           Andrew G. Malis, described.   Both  the  1822L  protocol  and  the  short-blocking, Report  1822, and will define new terms when they are first used., Of course, familiarity with Report 1822 (section 3 in particular), This document  makes  many  references  to  Report  1822.   As  a, convenient  abbreviation,  I  will  use  "see 1822(x)" instead of, "please refer to Report 1822, section x, for further details".,                               - 2 -, RFC 802                                           Andrew G. Malis, of section 2.4, and James G. Herman, Dr. Paul J. Santos Jr., John, RFC 802                                           Andrew G. Malis, 2  THE ARPANET 1822L HOST ACCESS PROTOCOL, The ARPANET  1822L  Host  Access  Protocol,  which  replaces  the, ARPANET  1822  Host  Access  Protocol  described  in Report 1822,, addressing allows hosts to refer to each  other  using  an  1822L, name  (see section 2.1) which is independent of a host's physical, 4473)  [2]  gives  the  use  of  logical  addressing considerable, The main differences between the 1822 and 1822L protocols are the, RFC 802                                           Andrew G. Malis, using the 1822 or the 1822L protocol.  When a host comes up on an, IMP,  it declares itself to be an 1822 host or an 1822L host host, appropriate NOP.  Hosts that do not use the 1822L  protocol  will, Another difference between the two protocols  is  that  the  1822, leaders are symmetric, while the 1822L leaders are not.  The term, symmetric means that in the 1822 protocol, the exact same  leader, message).  In contrast, the 1822L headers are not symmetric,  and, RFC 802                                           Andrew G. Malis, 2.1  Addresses and Names, The 1822 protocol defines one form of host specification, and the, 1822L  protocol  defines  two additional ways to identify network, hosts.  These three forms are 1822 addresses,  1822L  names,  and, 1822L addresses., 1822 addresses are  the  24-bit  host  addresses  found  in  1822,        1              8 9                              24,                  Figure 1. 1822 Address Format, than  a  fraction of the available address space.  1822 addresses, are used in 1822 leaders only., 1822L names are 16-bit unsigned numbers that serve as  a  logical, identifier  for  one  or  more  hosts.   1822L  names have a much, RFC 802                                           Andrew G. Malis,                |           1822L name           |,                   Figure 2. 1822L Name Format, The 1822L names are just 16-bit  unsigned  numbers,  except  that, bits  1  and  2 are not both zeros (see below).  This allows over, 1822 addresses cannot be used in 1822L leaders, but there may  be, a  requirement for an 1822L host to be able to address a specific, physical host port or IMP fake host.  1822L  addresses  are  used, for  this  function.   1822L addresses form a subset of the 1822L, name space, and have both bits 1 and 2 off.,                1   2  3          8 9             16,                  Figure 3. 1822L Address Format, RFC 802                                           Andrew G. Malis, This format gives 1822L hosts the  ability  to  directly  address, hosts  0-59  at  IMPs 1-255 (IMP 0 does not exist).  Host numbers, 2.2  Name Authorization and Effectiveness, 1822 or 1822L protocol to access the network, will be assigned at, least one 1822L name (logical address).  Other 1822L  hosts  will, the introduction, hosts on non-C/30 IMPs cannot be assigned 1822L, names.  To circumvent this restriction, however, 1822L hosts  can, use  1822L addresses to access all other hosts on the network, no, RFC 802                                           Andrew G. Malis, administrator,   that  name  is  said  to  be  authorized.  1822L, are two cases to consider, one for 1822L hosts  and  another  for, 1822  hosts.   The following discussion only pertains to hosts on, When an IMP sees an 1822L host come up on a host  port,  the  IMP, RFC 802                                           Andrew G. Malis, 1822 protocol, the IMP automatically makes the first name the IMP, though  the host is using the 1822 protocol, it can still receive, messages from 1822L hosts via its 1822L name.  Of course, it  can, also receive messages from an 1822L host via its 1822L address as, well.   (Remember,  the  distinction  between  1822L  names   and, RFC 802                                           Andrew G. Malis, an  1822L  host comes up, it uses the NDM message to tell the IMP, Several hosts can share the same 1822L name.  If more than one of, 1822L name will be delivered to just one  of  the  hosts  sharing, providing  exactly  the  same  service could share the same 1822L, Similarly, when a host is multi-homed, the same  1822L  name  may, RFC 802                                           Andrew G. Malis, could  use  either  the  port's 1822L address or a specific 1822L, Some further details are required on communications between  1822, and  1822L  hosts.   Obviously, when 1822 hosts converse, or when, 1822L hosts converse, no conversions between leaders and  address, when 1822 and 1822L hosts converse with each other., "1822  on  C/30"  signifies  an  1822 host that is on a C/30 IMP,, "1822L" signifies an 1822L host (on a C/30  IMP),  and  "1822  on, support the 1822L protocol).  The table entry shows the  protocol,                              - 12 -, RFC 802                                           Andrew G. Malis,   Host    | 1822 on C/30   | 1822L          | 1822 on non-C/30,   1822 on | 1822           | 1822           | 1822,           | 1822L, using   | 1822L, using   | 1822L, using,   1822L   | 1822L name or  | 1822L name or  | 1822L address,           |address (note 2)| address        | only (note 2),   1822 on | 1822           | 1822           | 1822,           with  an 1822L leader containing the 1822L addresses,           address  cannot be encoded as an 1822L address, then,   Note 2: The message is presented  to  the  destination  host,           with  an  1822 leader containing the 1822 address of, RFC 802                                           Andrew G. Malis, 2.3  Uncontrolled Messages, Uncontrolled messages (see 1822(3.6)) present  a  unique  problem, for  the  1822L  protocol.  Uncontrolled messages use none of the, with  them, including source and destination addresses.  If 1822L, possible between 1822 hosts., Uncontrolled messages  that  are  sent  between  1822  hosts  may, that are sent to and/or from 1822L hosts are limited to  32  bits, RFC 802                                           Andrew G. Malis, contains an error in the 1822L name specification,  such  as  the, 2.4  The Short-Blocking Feature, The short-blocking feature of the 1822  and  1822L  protocols  is, the non-blocking host interface described in 1822(3.7), and  that, RFC 802                                           Andrew G. Malis, 2.4.1  Host Blocking, RFC 802                                           Andrew G. Malis, RFC 802                                           Andrew G. Malis, 2  seconds,  with  its value possibly depending on the reason for, RFC 802                                           Andrew G. Malis, 2.4.2  Reasons for Host Blockage, RFC 802                                           Andrew G. Malis, 3.2 for a summary of the Incomplete Transmission  message  and  a,     2.3).   Two  messages  are  considered  to  be  on  the  same,                              - 20 -, RFC 802                                           Andrew G. Malis,                              - 21 -, RFC 802                                           Andrew G. Malis, IMPs,  whether they are using the 1822 or 1822L protocol, through, the use of Type 0, sub-type 1 and 2 messages.  A host using these, 2.5  Establishing Host-IMP Communications, 1822(3.2)), the orderly flow of messages between the host and the,                              - 22 -, RFC 802                                           Andrew G. Malis, 1822 or 1822L leaders., six NOPs, alternating three 1822  NOPs  with  three  1822L  NOPs., proper style.  The 1822 NOPs will contain the 1822 address of the,                              - 23 -, RFC 802                                           Andrew G. Malis, host interface, and the 1822L NOPs will contain the corresponding, 1822L address., messages, regular communications can commence.  See 1822(3.2) for,                              - 24 -, RFC 802                                           Andrew G. Malis, 3  1822L LEADER FORMATS, precede  messages  between  an 1822L host and its IMP.  They were, designed to be as compatible with the 1822 leaders  as  possible., leaders, and all  of  the  existing  functionality  of  the  1822, in the first word.  The 1822 New Format Flag is now also used  to, identify  the  two  types of 1822L leaders, and the Handling Type, contain the Source and Destination 1822L Name, respectively.,                              - 25 -, RFC 802                                           Andrew G. Malis, 3.1  Host-to-IMP 1822L Leader Format,               |        |  1822L |                |,               | Unused |  H2I   | Handling Type  |,                17    20 21 22 24 25            32,            Figure 5. Host-to-IMP 1822L Leader Format,                              - 26 -, RFC 802                                           Andrew G. Malis, Bits 5-8: 1822L Host-to-IMP Flag:,      1822(3.3)., Bits 17-20: Unused, must be zero., Bit 21: Trace Bit:,      it proceeds through the network.  See 1822(5.5)., Bits 22-24: Leader Flags:,      Bit 22: A flag available for use by  the  destination  host.,           See 1822(3.3) for a description of its use by the IMP's,      Bits 23-24: Reserved for future use, must be zero.,                              - 27 -, RFC 802                                           Andrew G. Malis, Bits 25-32: Message Type:,                2.4) may occur.,           1: Standard, short-blocking - See section 2.4.,           2: Uncontrolled, short-blocking - See section 2.4.,                2.4)  may  cause  loss  of  the message.  Also see,                1822(3.6) and section 2.3.,      Type 1: Error Without Message ID - See 1822(3.3).,      Type 2: Host Going Down - see 1822(3.3).,           used by the host to declare which of its 1822L names is,           or is not effective (see section 2.2), or to  make  all,           and  any  padding,  contains  the  number of 1822L name,                              - 28 -, RFC 802                                           Andrew G. Malis,           the 1822L name entries, each 32 bits long, of which the,           first 16 bits is a 1822L name and the  second  16  bits,           3.2)  indicating  which  of the names are now effective,                              - 29 -, RFC 802                                           Andrew G. Malis,             1             16 17            32 33            48,             97           112 113          128 129          144,            |  # of entries  |  1822L name #1 |     0 or 1     |,            |  1822L name #2 |     0 or 1     |       etc.,           leader  the  host wishes to use.  A 1822L NOP signifies,           that the host wishes to use 1822L leaders, and an  1822,           NOP signifies that the host wishes to use 1822 leaders., RFC 802                                           Andrew G. Malis,           1822(3.3)  still  hold.   The  host should always issue,           the IMP.  Also see section 2.5 for a further discussion,      Type 8: Error with Message ID - see 1822(3.3).,      Types 5-7,9-255: Unassigned.,      This field contains one of the  source  host's  1822L  names,      (or,  alternatively,  the 1822L address of the host port the,      automatically filled in by the IMP, as in the 1822 protocol,,      If the host places its 1822L  Address  in  this  field,  the,      destined for an 1822 host on a non-C/30 IMP, this field MUST, RFC 802                                           Andrew G. Malis,      contain the source host's 1822L address  (see  Figure  4  in,      section 2.2).,      This field  contains  the  1822L  name  or  address  of  the,      message is destined for an 1822 host on a non-C/30 IMP, this,      field MUST contain the destination host's 1822L address (see,      Figure 4 in section 2.2).,      and  type  8  messages, and is also used in type 2 messages.,      When used in type 0 messages, bits 65-72 are also  known  as,      This field is used as a modifier by message types 0,  2,  4,,                              - 32 -, RFC 802                                           Andrew G. Malis, RFC 802                                           Andrew G. Malis, 3.2  IMP-to-Host 1822L Leader Format,               |        |  1822L |                |,               | Unused |  I2H   | Handling Type  |,                17    20 21 22 24 25            32,            Figure 7. IMP-to-Host 1822L Leader Format, RFC 802                                           Andrew G. Malis, Bits 5-8: 1822L IMP-to-Host Flag:, Bits 17-20: Unused and set to zero., Bit 21: Trace Bit:,      tracing as it proceeds through the network.  See 1822(5.5)., Bits 22-24: Leader Flags:,      Bit 22: Available as a destination host flag.,      Bits 23-24: Reserved for future use, set to zero., Bits 25-32: Message Type:,      Type 1: Error in Leader - See 1822(3.4)., RFC 802                                           Andrew G. Malis,      Type 2: IMP Going Down - See 1822(3.4).,           replying  to,  and  each  listed  1822L  name  will  be,           the  1822L  Address of the host port over which the NOP,      Type 5: Ready for Next Message (RFNM) - See 1822(3.4).,      Type 6: Dead Host Status - See 1822(3.4).,           the "dead" destination is discarded.  See 1822(3.4) for, RFC 802                                           Andrew G. Malis,           response  to  an uncontrolled (type 0, sub-type 2 or 3),      Type 8: Error in Data - See 1822(3.4).,           the  host  for  a long amount of time.  See section 2.4,           2: The host took more than 15 seconds to  transmit  the, RFC 802                                           Andrew G. Malis,           time  out.   See  section  2.4.2  for  further  details, RFC 802                                           Andrew G. Malis,      Type 10: Interface Reset - See 1822(3.4).,      Type 15: 1822L Name or Address Error - This message is  sent,           0: The Source Host 1822L name is not authorized or  not,           1: The Source Host 1822L address  does  not  match  the,           2: The Destination Host 1822L name is not authorized.,           3: The Destination Host 1822L name  is  authorized  but, RFC 802                                           Andrew G. Malis,                1822L  name,  but the host being addressed is on a,                non-C/30 IMP (see Figure 4 in section 2.2).,      Types 11-14,16-255: Unassigned.,      For type 0 messages, this field contains the 1822L  name  or,      For type 0 messages, this field contains the 1822L  name  or, RFC 802                                           Andrew G. Malis,      section 3.1).  This field is also used by  message  types  2,      This field is used as a modifier by message types 0-2,  4-7,, RFC 802                                           Andrew G. Malis,      BBN Report 1822, May 1978 Revision., [2]  E. C. Rosen et. al., ARPANET Routing Algorithm Improvements,,                              - 42 -, RFC 802                                           Andrew G. Malis, 1822...................................................... 4, 1822 address.............................................. 6, 1822 host................................................. 5, 1822L..................................................... 4, 1822L address............................................. 7, 1822L host................................................ 5, 1822L name................................................ 6, congestion control................................... 22, 39, connection........................................... 20, 38, destination host..................................... 32, 40, flow control......................................... 20, 38, handing type......................................... 27, 35, leader flags......................................... 27, 35, link field............................................... 32, message ID........................................... 32, 41, message type......................................... 28, 35, NDM.................................................. 10, 28, NOP........................................... 5, 22, 30, 36, outstanding.............................................. 21, priority bit............................................. 27, regular message...................................... 28, 35, short-blocking message............................... 19, 28, standard message......................................... 28, sub-type............................................. 32, 41, trace bit............................................ 27, 35, uncontrolled message................................. 14, 28]
rfc805.txt: [                                                         8 February 1982,    A meeting was held on the 11th of January 1982 at USC Information, Computer Mail Meeting Notes                              8 February 1982, Postel                                                          [Page 2], Computer Mail Meeting Notes                              8 February 1982,    protocol and port numbers (e.g., PROTOCOL=6, PORT=25).  Another, Computer Mail Meeting Notes                              8 February 1982,       destination host (F.ISI), or (2) the address of a name server for,       2,  the source host queries the ISI name server and ... (recursive,       Due: 15-Feb-82,       Due: 15-Feb-82, Computer Mail Meeting Notes                              8 February 1982,       Due: 15-Feb-82,       Due: 1-Mar-82, Computer Mail Meeting Notes                              8 February 1982,    Duane A. Adams    DARPA/IPTO    Adams@ISI           (202) 694-8096,    Vint Cerf         DARPA/IPTO    Cerf@ISI            (202) 694-3049,    Bob Fabry         Berkeley      Fabry@Berkeley      (415) 642-2714,    Bill Joy          Berkeley      unj@berkeley        (415) 642-7780,    Gene Ball         CMU           Ball@CMUA           (412) 578-2569,    David L. Mills    COMSAT        Mills@ISID          (202) 863-6092,    Dave Crocker      Univ. Del     DCrocker@Udel       (302) 738-8913,    Ray McFarland     DoD           McFarland@ISIA      (301) 796-6290,    Dave Lebling      MIT           PDL@MIT-XX          (617) 253-1440,    Paul Mockapetris  ISI           Mockapetris@ISIF    (213) 822-1511,    Jon Postel        ISI           Postel@ISIF         (213) 822-1511,    Carl Sunshine     ISI           Sunshine@ISIF       (213) 822-1511]
RFC2.txt: [2]
rfc800.txt: [                                                           November 1982,   hierarchy of name domains be introduced; see also RFC 822.,   Replaces IEN 125., RFC 800                                                    November 1982, 792     Postel       Sep 81      Internet Control Message Protocol,   RFCs 776, 770, 762, 758, 755, 750, 739, 604.,   An old version; see RFC 821., 786     Sluizer     July 81      Mail Transfer Protocol:  ISI TOPS20,   NIMAIL programs in ISI TOPS20.  Outdated., 785     Sluizer     July 81      Mail Transfer Protocol:  ISI TOPS20,   from user mail programs in ISI TOPS20.  Outdated., 784     Sluizer     July 81      Mail Transfer Protocol:  ISI TOPS20,   the ISI TOPS20.  Outdated., Postel & Vernon                                                 [page 2], RFC 800                                                    November 1982, 783     Sollins     June 81      The TFTP Protocol Revision 2, 782     Nabielsky   undated      A Virtual Terminal Management Model,   An outdated Mail protocol; see RFC 821.,   An old version; see RFC 792., RFC 800                                                    November 1982, 772     Sluizer      Sep 80      Mail Transfer Protocol,   An old version of a Mail Protocol; see RFC 821., 769     Postel    26 Sep 80      Rapicom 450 Facsimile File Format, 768     Postel    28 Aug 80      User Datagram Protocol, RFC 800                                                    November 1982, 762     Postel       Jan 80      Assigned Numbers,   and a data base, see also RFCs 759, 821 and 822., RFC 800                                                    November 1982, 752     Crispin    3 Jan 79      A Universal Host Table,   used by most Tenex and TOPS20 hosts., 750     Postel    26 Sep 78      Assigned Numbers, 747     Crispin   21 Mar 78      Recent Extensions to the SUPDUP,   The specification of a symmetrical 1822 style interface., RFC 800                                                    November 1982, 742   Harrenstien 30 Dec 77      NAME/FINGER Protocol, 741     Cohen     22 Nov 77      Specifications for the Network Voice, 740     Braden    22 Nov 77      NETRJS Protocol,   Defines the Time Server Protocol; see IEN 142 for the TCP and VDP,   the SMTP; see also RFC 821.,   Telnet connections.  Replaces RFC 729., 733     Crocker   21 Nov 77      Standard for the Format of ARPA Network,   version; see RFC 822., RFC 800                                                    November 1982, 732     Day       12 Sep 77      TELNET Data Entry Terminal Option, 731     Day       27 Jun 77      TELNET Data Entry Terminal Option,   An old version; see RFC 732., 730     Postel    20 May 77      Extensible Field Addresing,   changing from 8-bit to 24-bit network addresses., 729     Crocker   13 May 77      TELNET Byte Macro Option, 728     Day       27 Apr 77      A Minor Pitfall in the Telnet Protocol, 727     Crispin   27 Apr 77      TELNET Logout Option, 726     Postel     8 Mar 77      Remote Controlled Transmission and, 725     Day        1 Mar 77      An RJE Protocol for a Resource Sharing, 724     Crocker   12 May 77      Proposed Official Standard for the,   An old version; see RFC 822., 722     Haverty   16 Sep 76      Thoughts on Interactions in Distributed, RFC 800                                                    November 1982, 721     Garlick    1 Sep 76      Out of Band Control Signals in a Host, 720     Crocker    5 Aug 76      Address Specification Syntax for, 719     Postel    22 Jul 76      Discussion on RCTE,   A short discussion of RCTE implementation issues; see also RFCs 726,   A short note on the Tenex implementation of RCTE; see also RFCs 726, 716     Levin     24 May 76      Interim Revision to Appendix F of BBN,                                  1822,   A short note updating the specification of the very Distant Host 1822, 714     McKenzie  21 Apr 76      A Host/Host Protocol for an, 712     Donnelley  5 Feb 76      A Distributed Capability Computing, RFC 800                                                    November 1982, 707     White     23 Dec 75      A High-Level Framework for,   Describes the changes to the 1822 interface to eliminate the,   options.  Updates RFCs 702, 701, 679 and 669., 702     Dodds     25 Sep 74      Survey of New-Protocol Telnet Servers,   703, 702, 679 and 669.]
rfc801.txt: [   hosts as soon as possible and no later than 1 January 1982 in any,    fully in place in January 1982.,       1 January 1982., Postel                                                          [Page 2],          This is specified in RFCs 791 and 792.  Implementations exist,       must begin by 1 January 1982.,    Last NCP Conversion Begins                                     Jan 82,    Mail Relay Service                                             Jan 82,    Normal Internet Service                                        Jul 82,    Last NCP Conversion Completed                                  Nov 82,       ICMP                                                       RFC 792,       Internet Protocol Handbook                                  Jan 82,       Implementers Hints                                          Jan 82,       SDC IP/TCP Specifications                                   Jan 82,       Expanded Host Table                                         Jan 82,       will be many more names, and (2) there may be a need to note the,       concerns about the relay service: (1) reliability, and (2) load.,           200          20        178          2        356     Jan-82,           210          40        158         12       1896     Mar-82,           220          60        135         25       3375     May-82,           225          95         90         40       3600     J